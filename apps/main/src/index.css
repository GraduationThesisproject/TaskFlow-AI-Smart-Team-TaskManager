@tailwind base;
@tailwind components;
@tailwind utilities;

/* React Bits Animation Classes */
@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@keyframes fadeInUp {
  from {
    opacity: 0;
    transform: translateY(30px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes fadeInDown {
  from {
    opacity: 0;
    transform: translateY(-30px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes fadeInLeft {
  from {
    opacity: 0;
    transform: translateX(-30px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes fadeInRight {
  from {
    opacity: 0;
    transform: translateX(30px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes slideInUp {
  from {
    transform: translateY(100%);
  }
  to {
    transform: translateY(0);
  }
}

@keyframes slideInDown {
  from {
    transform: translateY(-100%);
  }
  to {
    transform: translateY(0);
  }
}

@keyframes scaleIn {
  from {
    opacity: 0;
    transform: scale(0.9);
  }
  to {
    opacity: 1;
    transform: scale(1);
  }
}

@keyframes bounceIn {
  0% {
    opacity: 0;
    transform: scale(0.3);
  }
  50% {
    opacity: 1;
    transform: scale(1.05);
  }
  70% {
    transform: scale(0.9);
  }
  100% {
    opacity: 1;
    transform: scale(1);
  }
}

/* Animation Classes */
.animate-fade-in {
  animation: fadeIn 0.6s ease-out forwards;
}

.animate-fade-in-up {
  animation: fadeInUp 0.6s ease-out forwards;
}

.animate-fade-in-down {
  animation: fadeInDown 0.6s ease-out forwards;
}

.animate-fade-in-left {
  animation: fadeInLeft 0.6s ease-out forwards;
}

.animate-fade-in-right {
  animation: fadeInRight 0.6s ease-out forwards;
}

.animate-slide-in-up {
  animation: slideInUp 0.6s ease-out forwards;
}

.animate-slide-in-down {
  animation: slideInDown 0.6s ease-out forwards;
}

.animate-scale-in {
  animation: scaleIn 0.6s ease-out forwards;
}

.animate-bounce-in {
  animation: bounceIn 0.8s ease-out forwards;
}

/* Stagger animations for lists */
.delay-100 {
  animation-delay: 0.1s;
}

.delay-200 {
  animation-delay: 0.2s;
}

.delay-300 {
  animation-delay: 0.3s;
}

.delay-400 {
  animation-delay: 0.4s;
}

.delay-500 {
  animation-delay: 0.5s;
}

/* Smooth transitions for hover effects */
.transition-smooth {
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

/* Loading states */
.animate-pulse {
  animation: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
}

@keyframes pulse {
  0%, 100% {
    opacity: 1;
  }
  50% {
    opacity: 0.5;
  }
}

/* Shimmer effect for loading */
.animate-shimmer {
  background: linear-gradient(
    90deg,
    transparent,
    rgba(255, 255, 255, 0.4),
    transparent
  );
  background-size: 200% 100%;
  animation: shimmer 1.5s infinite;
}

@keyframes shimmer {
  0% {
    background-position: -200% 0;
  }
  100% {
    background-position: 200% 0;
  }
}

/* Hover animations */
.hover-lift {
  transition: transform 0.3s ease, box-shadow 0.3s ease;
}

.hover-lift:hover {
  transform: translateY(-4px);
  box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);
}

.hover-scale {
  transition: transform 0.3s ease;
}

.hover-scale:hover {
  transform: scale(1.05);
}

/* Focus animations */
.focus-ring {
  transition: box-shadow 0.2s ease;
}

.focus-ring:focus {
  outline: none;
  box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.5);
}

/* Scroll animations */
.scroll-reveal {
  opacity: 0;
  transform: translateY(30px);
  transition: opacity 0.6s ease, transform 0.6s ease;
}

.scroll-reveal.revealed {
  opacity: 1;
  transform: translateY(0);
}

/* Performance optimizations */
.will-change-transform {
  will-change: transform;
}

.will-change-opacity {
  will-change: opacity;
}

/* Reduced motion support */
@media (prefers-reduced-motion: reduce) {
  *,
  *::before,
  *::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
  }
}

/* Disable text selection for all elements */
* {
  -webkit-user-select: none; /* Safari */
  -moz-user-select: none; /* Firefox */
  -ms-user-select: none; /* IE10+/Edge */
  user-select: none; /* Standard */
}

/* Allow text selection for inputs and textareas */
input,
textarea,
[contenteditable] {
  -webkit-user-select: text !important;
  -moz-user-select: text !important;
  -ms-user-select: text !important;
  user-select: text !important;
}

/* Cursor visibility for light theme */
input,
textarea,
[contenteditable] {
  caret-color: hsl(var(--foreground));
}

/* Ensure cursor is visible on buttons and interactive elements */
button,
[role="button"],
.cursor-pointer {
  cursor: pointer;
}

/* Dark cursor for light backgrounds */
[data-theme="light"] input,
[data-theme="light"] textarea,
[data-theme="light"] [contenteditable],
.light input,
.light textarea,
.light [contenteditable] {
  caret-color: hsl(var(--foreground));
}

/* Light cursor for dark backgrounds */
[data-theme="dark"] input,
[data-theme="dark"] textarea,
[data-theme="dark"] [contenteditable],
.dark input,
.dark textarea,
.dark [contenteditable] {
  caret-color: hsl(var(--foreground));
}

/* Global cursor visibility for all input and textarea elements */
input[type="text"],
input[type="email"],
input[type="password"],
input[type="search"],
input[type="url"],
input[type="tel"],
input[type="number"],
textarea,
[contenteditable] {
  caret-color: hsl(var(--foreground)) !important;
}

/* Ensure cursor is visible on all interactive elements */
button:not(:disabled),
[role="button"]:not(:disabled),
.cursor-pointer,
[onclick],
[onClick] {
  cursor: pointer;
}

/* Disabled elements should show not-allowed cursor */
button:disabled,
[role="button"]:disabled,
input:disabled,
textarea:disabled {
  cursor: not-allowed;
}

:root {
  --background: 0 0% 100%;
  --foreground: 222.2 84% 4.9%;
  --card: 0 0% 100%;
  --card-foreground: 222.2 84% 4.9%;
  --popover: 0 0% 100%;
  --popover-foreground: 222.2 84% 4.9%;
  --primary: 201 100% 44%;
  --primary-foreground: 0 0% 100%;
  --secondary: 210 40% 96%;
  --secondary-foreground: 222.2 84% 4.9%;
  --muted: 210 40% 96%;
  --muted-foreground: 215.4 16.3% 46.9%;
  --accent: 170 100% 45%;
  --accent-foreground: 222.2 84% 4.9%;
  --destructive: 0 84.2% 60.2%;
  --destructive-foreground: 210 40% 98%;
  --border: 214.3 31.8% 91.4%;
  --input: 214.3 31.8% 91.4%;
  --ring: 201 100% 44%;
  --radius: 0.5rem;
  --neutral-0: 0 0% 0%;
  --neutral-100: 0 0% 10%;
  --neutral-200: 0 0% 16%;
  --neutral-1000: 0 0% 100%;
  --success: 142 76% 36%;
  --warning: 38 92% 50%;
  --error: 0 84% 60%;
  --info: 201 100% 44%;
}

body {
  margin: 0;
  font-family: Inter, system-ui, -apple-system, BlinkMacSystemFont, Segoe UI, sans-serif;
  line-height: 1.5;
  font-weight: 400;
  background-color: hsl(var(--background));
  color: hsl(var(--foreground));
}

/* Prevent text selection on draggable elements */
[data-rbd-draggable-id] {
  user-select: none;
}

/* Root sizing retained to allow containers to manage scroll themselves */
html, body, #root {
  height: 100%;
}

/* Ensure the orbit keyframes exist even if Tailwind doesn't emit them */
@keyframes orbit {
  0% { --tw-glow-angle: 0deg; }
  100% { --tw-glow-angle: 360deg; }
}

/* Animated orbit glow ring utility */
@layer utilities {
  .orbit-glow {
    position: relative;
    overflow: hidden;
  }

  .orbit-glow::before {
    content: "";
    position: absolute;
    inset: -2px; /* slight bleed to avoid gaps */
    border-radius: inherit;
    z-index: 1; /* render above content edges, inner area is masked out */
    /* Create a ring using conic-gradient that rotates via --tw-glow-angle */
    background: conic-gradient(from var(--tw-glow-angle, 0deg),
      hsla(var(--accent), 0) 0deg,
      hsla(var(--accent), 0.0) 300deg,
      hsla(var(--accent), 0.8) 330deg,
      hsla(var(--accent), 0) 360deg
    );

    /* Cut out the inner area so only the border shows */
    -webkit-mask: linear-gradient(#000 0 0) content-box, linear-gradient(#000 0 0);
    -webkit-mask-composite: xor;
            mask-composite: exclude;
    padding: 2px; /* ring thickness */
    pointer-events: none;
    opacity: 0; /* only visible on hover */
    transition: opacity 150ms ease;
  }

  .orbit-glow:hover::before {
    opacity: 1;
    animation: orbit 1.2s linear infinite;
  }
}